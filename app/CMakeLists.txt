cmake_minimum_required(VERSION 3.12)
project(faultToVect)

set(EXECUTABLE_OUTPUT_PATH ../../out/build/bin/)

find_package(Boost REQUIRED COMPONENTS filesystem)
if(Boost_FOUND)
	set(Boost_USE_STATIC_LIBS OFF)
	set(Boost_USE_MULTITHREAD OFF)
	include_directories(${Boost_INCLUDE_DIRS})
	link_directories(${Boost_LIBRARY_DIRS})
else()
  message(STATUS "NOTICE: This exe requires Boost and will not be compiled.")
endif()

find_package(CGAL REQUIRED)
if(CGAL_FOUND)
  include(${CGAL_USE_FILE})
else()
  message(STATUS "NOTICE: This exe requires CGAL and will not be compiled.")
endif()
 
find_package(GDAL REQUIRED)
if (GDAL_FOUND)
  include_directories(${GDAL_INCLUDE_DIRS})
else()
  message(STATUS "NOTICE: This exe requires GDAL and will not be compiled.")
endif()

find_package(OpenCV REQUIRED)
if (OpenCV_FOUND)
  include_directories(${OpenCV_INCLUDE_DIRS})
else()
  message(STATUS "NOTICE: This exe requires OpenCV and will not be compiled.")
endif()

find_package(OpenMP)
if (OpenMP_FOUND)
else()
  message(STATUS "NOTICE: This exe uses OpenMP for better performances (not found).")
endif()

find_package(fmt CONFIG REQUIRED)
if (fmt_FOUND)
else()
  message(STATUS "NOTICE: This exe requires fmt and will not be compiled.")
endif()

find_package(doctest CONFIG REQUIRED)
if (doctest_FOUND)
else()
  message(STATUS "NOTICE: This exe requires doctest and will not be compiled.")
endif()

include_directories(include)

file(GLOB_RECURSE SOURCE include/* src/*)
add_executable(${PROJECT_NAME} ${SOURCE})

#target_link_libraries(${PROJECT_NAME} PRIVATE fmt::fmt fmt::fmt-header-only doctest::doctest LIBNAME)
target_link_libraries(${PROJECT_NAME} ${GDAL_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY} ${OpenCV_LIBS} fmt::fmt fmt::fmt-header-only doctest::doctest)
target_compile_options(${PROJECT_NAME} PRIVATE ${OpenMP_CXX_FLAGS})

#include(doctest)
#doctest_discover_tests(${PROJECT_NAME})